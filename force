#!/usr/bin/env node

//const repl = require('repl');
var program = require('commander');
const log = require('bunny-logger');
const readline = require('readline');
const pkg = require('./package');
const force = require('./src/force-lang');

(async function main(){

program
  .version(pkg.version)
  .usage('[options] <file ...>')
  //.option('-f, --file [file]', 'input from file')
  .option('-x, --exec [text]', 'input from string')
  .option('-i, --shell', 'run repl')
  .option('-s, --stdin', 'input from stdin (default action)')
  .parse(process.argv);

await force.load_lib();

if(! (program.file || program.shell || program.exec || program.args[0])) program.stdin = true;

if(program.file){
	if(typeof(program.file)!=='string'){
		log.error('no file given.');
		process.exit(1);
	}
	await force.eval_file(program.file);
}

if(program.exec){
	if(typeof(program.exec)!=='string'){
		log.error('no input given.');
		process.exit(1);
	}
	force.exec(program.exec);
}
if(program.shell){
	//repl.start({prompt: '> ',eval: function(e){eval.eval(e);}});

	force.populate_repl();

	var buffered_line = '';

	const rl = readline.createInterface({
  	input: process.stdin,
  	output: process.stdout,
  	prompt: '> '
	});

	rl.prompt();

	rl.on('line', (line) => {
		if(line[line.length-1]==='\\'){
			buffered_line += line.substr(0,line.length-1) +' ';
			rl.setPrompt('... ');
		} else {
			if(buffered_line!=='') {
				buffered_line += line;
				force.exec(buffered_line);
				buffered_line='';
			}else {
				force.exec(line);
			}
			rl.setPrompt('> ');
		}
		rl.prompt();
	});
}

	if(program.args[0]){
		await force.eval_file(program.args[0]);
	}

if(program.stdin){
	//log.info(process.stdin);
	var rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout,
  terminal: false
});

rl.on('line', function(line){
    force.exec(line);
})
}

})();